{
  "permissions": {
    "allow": [
      "Bash(python:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(docker:*)",
      "Bash(pip install:*)",
      "Bash(touch:*)",
      "Bash(find:*)",
      "Bash(grep:*)",
      "Bash(git checkout:*)",
      "Bash(rm:*)",
      "Bash(rg:*)",
      "Bash(mkdir:*)",
      "Bash(npm start)",
      "Bash(PORT=3001 npm start)",
      "Bash(PORT=3002 npm start)",
      "Bash(npm run build:*)",
      "Bash(npm test:*)",
      "Bash(PORT=3001 timeout 10 npm start)",
      "Bash(npm install:*)",
      "Bash(timeout 10 npm start)",
      "Bash(timeout 20 npm start)",
      "Bash(mv:*)",
      "Bash(npx tsc:*)",
      "Bash(node:*)",
      "Bash(timeout 15 npm start)",
      "Bash(timeout 15 PORT=3001 npm start)",
      "Bash(set PORT=3001)",
      "Bash(git commit:*)",
      "Bash(timeout 300 npm run build)",
      "Bash(timeout 180 npm run build)",
      "Bash(npx eslint:*)",
      "Bash(for f in *.tsx)",
      "Bash(do echo \"=== $f line 745 ===\")",
      "Bash(sed:*)",
      "Bash(done)",
      "Bash(timeout 30 npm start)",
      "Bash(npm ls:*)",
      "Bash(venvScriptsactivate.bat)",
      "Bash(call venvScriptsactivate.bat)",
      "Bash(source:*)",
      "Bash(venv/Scripts/activate:*)",
      "Bash(venvScripts:*)",
      "Bash(curl:*)",
      "Bash($env:PORT=3001)",
      "Bash(cmd /c:*)",
      "Bash(tasklist:*)",
      "Bash(npx:*)",
      "Bash(\"venv\\Scripts\\activate.bat\")",
      "Bash(uvicorn:*)",
      "Bash(SKIP_PREFLIGHT_CHECK=true PORT=3002 npm start)",
      "Bash(set TSC_COMPILE_ON_ERROR=true)",
      "Bash(SKIP_PREFLIGHT_CHECK=true PORT=3005 npm start)",
      "Bash(echo $REACT_APP_API_URL)",
      "Bash(PORT=3005 npm start)",
      "Bash(taskkill:*)",
      "Bash(REACT_APP_API_URL=http://localhost:8000 node test-auth.js)",
      "Bash(PORT=3006 npm start)",
      "Bash(.venvScriptsactivate)",
      "Bash(venv/Scripts/python.exe -m uvicorn:*)",
      "Bash(timeout 120 npm run build)",
      "Bash(SET TSC_COMPILE_ON_ERROR=true)",
      "Bash(net start:*)",
      "Bash(npm run type-check:*)",
      "Bash(cat:*)",
      "Bash(git rm:*)",
      "WebSearch",
      "WebFetch(domain:mui.com)",
      "Bash(for dir in reporting documents common admin testing)",
      "Bash(do echo \"=== $dir components ===\")",
      "Bash(echo \"Directory $dir not found\")",
      "Bash(scriptsstart-dev.bat)",
      "Bash(npm uninstall:*)",
      "Bash(PORT=3001 timeout 15 npm start)",
      "Bash(PORT=3003 npm start)",
      "Bash(PORT=3004 npm start)",
      "Bash(\"venv\\Scripts\\python.exe\" -c \"print(''Backend virtual environment accessible'')\")",
      "Bash(\"backend\\venv\\Scripts\\python.exe\" -c \"\nimport sys\nsys.path.append(''backend'')\nfrom backend.app.services.auth_service import AuthService\nfrom backend.app.schemas.auth import UserCreate, UserRole\n\n# Create demo user\nauth_service = AuthService()\nprint(''Creating demo user...'')\n\ntry:\n    demo_user = UserCreate(\n        email=''demo@clo-system.com'',\n        password=''demo123'',\n        first_name=''Demo'',\n        last_name=''User'',\n        full_name=''Demo User'',\n        role=UserRole.manager\n    )\n    \n    user = auth_service.create_user(demo_user)\n    print(f''Demo user created successfully: {user}'')\n    \nexcept Exception as e:\n    print(f''Failed to create demo user: {e}'')\n    \n# Test authentication with email\nprint(''\\nTesting authentication with email...'')\nuser = auth_service.authenticate_user(''demo@clo-system.com'', ''demo123'')\nprint(f''Authentication result: {user}'')\n\")",
      "Bash(\"backend\\venv\\Scripts\\python.exe\" -c \"\nimport sys\nsys.path.append(''backend'')\nfrom backend.app.services.auth_service import AuthService\nfrom backend.app.schemas.auth import UserCreate, UserRole\n\n# Create demo user\nauth_service = AuthService()\nprint(''Creating demo user...'')\n\ntry:\n    demo_user = UserCreate(\n        email=''demo@clo-system.com'',\n        password=''demo123'',\n        full_name=''Demo User'',\n        role=UserRole.MANAGER\n    )\n    \n    user = auth_service.create_user(demo_user)\n    print(f''Demo user created successfully: {user}'')\n    \nexcept Exception as e:\n    print(f''Failed to create demo user: {e}'')\n    # Try to get existing user\n    existing_user = auth_service.get_user_by_email(''demo@clo-system.com'')\n    if existing_user:\n        print(f''Demo user already exists: {existing_user}'')\n\")",
      "Bash(\"backend\\venv\\Scripts\\python.exe\" -c \"\nimport sys\nsys.path.append(''backend'')\nfrom backend.app.services.auth_service import AuthService\n\nauth_service = AuthService()\n\n# Test password verification\nprint(''Testing password verification...'')\nuser = auth_service.get_user_by_email(''demo@clo-system.com'')\nif user:\n    print(f''User found: {user[\"\"email\"\"]}'')\n    \n    # Test various passwords\n    passwords = [''demo123'', ''demo12345'', ''password123'', ''demoadmin'']\n    for pwd in passwords:\n        is_valid = auth_service.verify_password(pwd, user[''hashed_password''])\n        print(f''Password \"\"{pwd}\"\": {is_valid}'')\nelse:\n    print(''User not found'')\n\")",
      "Bash(\"venv\\Scripts\\python.exe\" -m uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload)",
      "Bash(set REACT_APP_API_URL=http://localhost:8001)",
      "Bash(timeout:*)",
      "Bash(backendvenvScriptspython.exe -m uvicorn backend.app.main:app --host 0.0.0.0 --port 8001 --reload)",
      "Bash(\"venv\\Scripts\\python.exe\" -c \"from app.main import app; print(''App imported successfully'')\")",
      "Bash(dir:*)",
      "Bash(powershell:*)",
      "Bash(set PORT=3002)",
      "Bash(call:*)",
      "Bash(.\\venv\\Scripts\\python.exe -m uvicorn:*)",
      "Bash(sqlite3:*)",
      "Bash(venv/Scripts/python.exe:*)",
      "Bash(\"venv\\Scripts\\python.exe\":*)",
      "Bash(\"venv\\Scripts\\activate\")",
      "Bash(set REACT_APP_API_URL=http://localhost:8002)",
      "Bash(PORT=3003 REACT_APP_API_URL=http://localhost:8002 npm start)",
      "Bash(PORT=3004 REACT_APP_API_URL=http://localhost:8002 timeout 30 npm start)",
      "Bash(PORT=3004 REACT_APP_API_URL=http://localhost:8002 npm start)",
      "Bash(rd:*)",
      "Bash(\"./venv/Scripts/python.exe\" -m uvicorn app.main:app --reload --host 0.0.0.0 --port 8000)",
      "Bash(.scriptsstart-dev.bat)",
      "Bash(set REACT_APP_API_URL=http://localhost:8000)"
    ],
    "deny": [],
    "defaultMode": "acceptEdits"
  }
}